scalar DateTime

directive @isAuthenticated on FIELD_DEFINITION

type Achievement {
    id: ID!
    name: String!
    description: String!
}

type Coordinate {
    latitude: Float!
    longitude: Float!
}

type TracePoint {
    id: ID!                 # Identifier to identify the trace point
    timestamp: DateTime!
    coordinate: Coordinate!
}

type Chill {
    id: ID!
    traces: [TracePoint!]!
}

type User {
    id: ID!
    name: String!
    chills: [Chill!]!
    achievements: [Achievement!]!
}

type Query {
    user: User! @isAuthenticated                    # Get current user
    chill(id: ID!): Chill! @isAuthenticated         # Get a chill of the current user by id
}

input RegisterUserInput {
    name: String!   # Username
}

input CoordinateInput {
    latitude: Float!
    longitude: Float!
}

input StartChillInput {
    timestamp: DateTime!
    coordinate: Coordinate!
}

input TracePointInput {
    timestamp: DateTime!
    coordinate: Coordinate!
}

input TracePointsInput {
    id: ID!                             # Chill id
    tracePoints: [TracePointInput!]!
}

input PhotoInput {
    url: String!
}

input PhotosInput {
    id: ID!                 # Chill id
    photos: [PhotoInput!]!
}

input EndChillInput {
    id: ID!                 # Chill id
    timestamp: DateTime!
    coordinate: Coordinate!
}

type Mutation {
    registerUser(input: RegisterUserInput): User! @isAuthenticated  # Other information can derive from the token
    startChill(input: StartChillInput!): Chill! @isAuthenticated
    addTracePoints(input: TracePointsInput!): Chill! @isAuthenticated
    addPhotos(input: PhotosInput!): Chill! @isAuthenticated
    endChill(input: EndChillInput!): Chill! @isAuthenticated
}
